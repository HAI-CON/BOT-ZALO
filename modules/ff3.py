from zlapi.models import Message
import requests
import os
from PIL import Image
from io import BytesIO

des = {
    'version': "1.0.2",
    'credits': "Minh V≈©",
    'description': "Check ƒê·ªì Ff "
}

def handle_doff_command(message, message_object, thread_id, thread_type, author_id, client):
    parts = message.strip().split()

    if len(parts) < 2:
        client.sendMessage(
            Message(text="‚ùå Thi·∫øu UID!\n\nüìå **C√°ch d√πng:**\n`-doff <uid>`\n\nV√≠ d·ª•: `-doff 12345678`"),
            thread_id, thread_type
        )
        return

    uid = parts[1]
    region = "SG"

    try:
        outfit_url = f"https://aditya-outfit-v11op.onrender.com/outfit-image?uid={uid}&region={region.lower()}"

        # T·∫£i ·∫£nh t·ª´ URL
        res = requests.get(outfit_url, stream=True)
        if res.status_code != 200:
            client.sendMessage(
                Message(text="‚ùå Kh√¥ng th·ªÉ l·∫•y ·∫£nh outfit. UID sai ho·∫∑c server l·ªói."),
                thread_id, thread_type
            )
            return

        # M·ªü ·∫£nh t·ª´ bytes
        image = Image.open(BytesIO(res.content)).convert("RGB")
        temp_path = f"modules/cache/outfit_{uid}.jpg"
        image.save(temp_path, format='JPEG')

        # G·ª≠i ·∫£nh qua Zalo
        client.sendLocalImage(temp_path, thread_id=thread_id, thread_type=thread_type, width=image.width, height=image.height)

        # Xo√° file t·∫°m
        if os.path.exists(temp_path):
            os.remove(temp_path)

    except Exception as e:
        client.sendMessage(
            Message(text=f"‚ö†Ô∏è C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω: {e}"),
            thread_id, thread_type
        )

def get_szl():
    return {
        'doff': handle_doff_command  # Lenh gui anh outfit rieng
    }